<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>Maven_Test</groupId>
    <artifactId>MavenTest</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>MavenTest</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <xmlFilename>testng.xml</xmlFilename>
    </properties>

    <dependencies>
        <!--selenium的依赖-->
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.12.0</version>
        </dependency>
        <!--TestNG的依赖-->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.11</version>
            <scope>test</scope>
        </dependency>
        <!--ReportNG的依赖-->
        <dependency>
            <groupId>org.uncommons</groupId>
            <artifactId>reportng</artifactId>
            <version>1.1.4</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>testng</artifactId>
                    <groupId>org.testng</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--ReportNG图形化所需的依赖-->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>3.0</version>
        </dependency>
        <!--java发送mail的依赖-->
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <!--ExtentX的依赖-->
        <dependency>
            <groupId>com.aventstack</groupId>
            <artifactId>extentreports</artifactId>
            <version>3.1.2</version>
            <scope>provided</scope>
        </dependency>
        <!--Extentx里Listener的依赖-->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>7.0.0</version>
            <scope>compile</scope>
        </dependency>
        <!--读取excel的POI-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>3.17</version>
        </dependency>
        <!--作用同上但版本需与poi的一致-->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.17</version>
        </dependency>
        <!-- log4j的依赖 -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.16</version>
        </dependency>


    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <!--<configuration>-->
                    <!--<fork>true</fork>-->
                    <!--<executable>C:\Program Files\Java\jdk1.8.0_171\bin\javac.exe</executable>-->
                    <!--</configuration>-->
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.17</version>
                    <!--<configuration>-->
                        <!--<skipTests>true</skipTests>-->
                    <!--</configuration>-->
                </plugin>
            </plugins>
        </pluginManagement>

        <!--Maven通过plugins来编译和执行testng及后续的操作：
            1、compiler编译；
            2、surefire调用TestNG；
            3、false屏蔽TestNG自带的usedefaultlisteners，并将listener替换为ReportNG；
            4、执行其他的java
         -->
        <plugins>
            <!--编译需要的plugin配置-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <!--先调用TestNG，再屏蔽TestNG自带listener和index.html，替换为ReportNG-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!--执行失败后是否ignore-->
                    <testFailureIgnore>true</testFailureIgnore>
                    <!--重试的次数-->
                    <forkMode>once</forkMode>
                    <suiteXmlFiles>
                        <!--指定需要执行的xml文件-->
                        <suiteXmlFile>testng.xml</suiteXmlFile>
                    </suiteXmlFiles>
                    <properties>
                        <property>
                            <name>usedefaultlisteners</name>
                            <value>false</value>
                        </property>
                        <property>
                            <name>listener</name>
                            <value>org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter</value>
                        </property>
                    </properties>
                    <!--执行的路径：maven执行的都是target编译后的-->
                    <workingDirectory>target/</workingDirectory>
                </configuration>
            </plugin>
            <!--Maven在test阶段执行：main/AutoMail/的main()主程序,执行邮件发送-->
            <!--<plugin>-->
            <!--<groupId>org.codehaus.mojo</groupId>-->
            <!--<artifactId>exec-maven-plugin</artifactId>-->
            <!--<version>1.1.1</version>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--&lt;!&ndash;在test阶段执行&ndash;&gt;-->
            <!--<phase>test</phase>-->
            <!--<goals>-->
            <!--&lt;!&ndash;执行的类型为java&ndash;&gt;-->
            <!--<goal>java</goal>-->
            <!--</goals>-->
            <!--<configuration>-->
            <!--&lt;!&ndash;是否需要加载Dependencies依赖&ndash;&gt;-->
            <!--<includePluginDependencies>true</includePluginDependencies>-->
            <!--&lt;!&ndash;需要执行的class&ndash;&gt;-->
            <!--<mainClass>mail.AutoMail</mainClass>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
        </plugins>

    </build>
</project>

